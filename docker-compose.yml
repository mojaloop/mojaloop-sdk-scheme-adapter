version: '3.7'
networks:
  mojaloop-net:
    name: mojaloop-net

services:

  sdk-scheme-adapter-api-svc:
    networks:
        - mojaloop-net
    image: mojaloop/sdk-scheme-adapter:local
    container_name: sdk-scheme-adapter-api-svc
    build:
      context: ./
      dockerfile: ./Dockerfile
    env_file: ./modules/api-svc/test/config/integration.env
    ports:
      - "4000:4000"
      - "4001:4001"
      - "4002:4002"
    depends_on:
      - redis
      - ml-testing-toolkit
      - kafka
    command: yarn nx run modules-api-svc:start
    volumes:
      - ./docker/wait4:/tmp/wait4
      - ./secrets:/opt/app/secrets
    user: root # Set Root so we can install Curl for Healthchecks
    healthcheck:
      test: [
        "CMD" ,
        "apk", "add", "--no-cache", "curl", # Install curl
        "&&",
        "curl", "-f", "http://localhost:4001" # Check if api is up
        ]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  redis:
    networks:
      - mojaloop-net
    image: "redis:6.2.4-alpine"
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD" ,"sh", "-c", "redis-cli","ping"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  ml-testing-toolkit:
    networks:
        - mojaloop-net
    image: mojaloop/ml-testing-toolkit:v15.0.0
    container_name: ml-testing-toolkit
    volumes:
      - "./docker/ml-testing-toolkit/spec_files:/opt/app/spec_files"
      - "./docker/ml-testing-toolkit/secrets:/opt/app/secrets"

    ports:
      - "4040:4040"
      - "5050:5050"
    environment:
      - AUTH_ENABLED=FALSE
    command: npm start

  mongo:
    networks:
        - mojaloop-net
    image: mongo
    ports:
      - "27018:27017"
  #
  # for local development we want to have ttk-ui
  #
  mojaloop-testing-toolkit-ui:
    image: mojaloop/ml-testing-toolkit-ui:v15.0.0
    ports:
      - "6060:6060"
    networks:
      - mojaloop-net
    environment:
      - API_BASE_URL=http://localhost:5050
      - AUTH_ENABLED=FALSE
    command:
      - sh
      - /usr/share/nginx/start.sh

  zookeeper:
    networks:
      - mojaloop-net
    image: docker.io/bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    networks:
      - mojaloop-net
    image: docker.io/bitnami/kafka:3.2
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENERS: LISTENER_DOCKER://kafka:29092,LISTENER_INTERN://kafka:9093,LISTENER_EXTERN://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER://kafka:29092,LISTENER_INTERN://kafka:9093,LISTENER_EXTERN://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER:PLAINTEXT,LISTENER_INTERN:PLAINTEXT,LISTENER_EXTERN:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERN
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD" ,"/opt/bitnami/kafka/bin/kafka-broker-api-versions.sh","--bootstrap-server","kafka:9092"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  insights:
    image: redislabs/redisinsight
    ports:
      - "9001:8001"
    volumes: []
    restart: on-failure

  kowl:
    image: quay.io/cloudhut/kowl:v1.4.0
    container_name: cl_kowl
    deploy:
      replicas: 1
    restart: on-failure
    hostname: kowl
    ports:
    - "9080:8080"
    networks:
      - mojaloop-net
    environment:
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - kafka
    profiles:
      - debug
